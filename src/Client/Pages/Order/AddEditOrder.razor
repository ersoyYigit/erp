@page "/orders/addorder"

@inject HttpClient httpClient
@inject ISnackbar Snackbar

<HeroTitle Title="Orders" Description="Add / Edit / Remove Orders" />


@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    
@if (showAddMaster)
{

    <MudCard Elevation="15">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Add New Order</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" @onclick="@CloseAddOrder" />
            </CardHeaderActions>

        </MudCardHeader>
        <MudCardContent>
            <MudForm >
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.OrderNo" Label="Order No" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.ProformaNo" Label="Proforma No" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudDatePicker @bind-Date="ordsM.FirstShippingDate" Label="First Shipping Date" Placeholder="Select Date" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudDatePicker  @bind-Date="ordsM.LastShippingDate" Label="Last Shipping Date" Placeholder="Select Date"/>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudDatePicker  @bind-Date="ordsM.OrderFormFillingDate" Label="Order Form Filling Date" Placeholder="Select Date"/>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.CustomerRepresentative" Label="Customer Representative" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.PoNumber" Label="Po Number" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudNumericField  T="int"  @bind-Value="ordsM.TotalNumberOfPallets" Label="Total Number Of Pallets" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.LoadingType" Label="Loading Type" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.PalletType" Label="Pallet Type" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.ShippingPlace" Label="Shipping Place" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.ProformaNo" Label="Proforma No" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.VehicleType" Label="Vehicle Type" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsM.ShippingMethod" Label="Shipping Method" />
                    </MudItem>
                </MudGrid>
            </MudForm>  
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="MudBlazor.Variant.Outlined" Color="Color.Primary" @onclick="@SaveOrderMasters">Save</MudButton>
        </MudCardActions>
    </MudCard>


}

@if (showAddDetail == true)
{
    <MudCard Elevation="15">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add New OrderDetail </MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" @onclick="@CloseAddOrder" />
        </CardHeaderActions>

    </MudCardHeader>
    <MudCardContent>
        <MudForm >
                 <MudGrid Style="@($"color:{Colors.Teal.Darken3}; background:{Colors.Teal.Lighten5};")">
                    
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.MoldCode" Label="Mold Code" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.Dimensions" Label="Dimensions" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudNumericField T="int"  @bind-Value="ordsD.TotalQuantity" Label="TotalQuantity" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.Code" Label="Code" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.AssortmentCode" Label="Assortment Code" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudNumericField T="int"  @bind-Value="ordsD.AssortmentQuantity" Label="Assortment Quantity" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.DecorationCode" Label="Decoration Code" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudTextField T="string"  @bind-Value="ordsD.DecorationDescription" Label="Decoration Description" />
                    </MudItem>

                    <MudItem xs="12" md="6">
                        <MudNumericField T="double"  @bind-Value="ordsD.ExternalPackHeight" Label="External Pack Height" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudNumericField T="double"  @bind-Value="ordsD.ExternalPackLenght" Label="External Pack Lenght" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudNumericField T="double"  @bind-Value="ordsD.ExternalPackWidth" Label="External Pack Width" />
                    </MudItem>
                    
                    <MudItem xs="12" md="6">
                        <MudNumericField T="double"  @bind-Value="ordsD.ExternalPackVolume" Label="External Pack Volume" />
                    </MudItem>
                    
            </MudGrid>
        </MudForm>  
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="MudBlazor.Variant.Outlined" Color="Color.Primary" @onclick="@(() => SaveOrderDetails())">Save</MudButton>
    </MudCardActions>
</MudCard>
}





<MudTable Hover="true" Elevation="20" Items="Orders" Striped="true" @bind-pattern="Orders">
    <ToolBarContent>
        <div class="justify-center mud-text-align-center">
            <MudButton DisableElevation Variant="MudBlazor.Variant.Filled" Color="Color.Primary" OnClick="(() => AddNewOrderMasters())" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface">New Order</MudButton>
        </div>
    <MudSpacer />

    </ToolBarContent>
    <HeaderContent>
        <MudTh ></MudTh>
        <MudTh>OrderNo</MudTh>
        <MudTh>Po Number</MudTh>
        <MudTh>Proforma No</MudTh>
        <MudTh>Shipping Method</MudTh>
        <MudTh>Represantative</MudTh>
        <MudTh Style="text-align:right">Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            @if (@context.OrderId != orderIDs)
            {
                <MudIconButton Icon="@Imagename" Color="Color.Primary" @onclick="() => getOrderDetails(context.OrderId)" />
            }
            else
            {
                <MudIconButton Icon="@Icons.Material.Filled.Remove" Color="Color.Primary" @onclick="() => getOrderDetails(context.OrderId)" />

            }
        </MudTd>
        <MudTd>@context.OrderNo</MudTd>
        <MudTd>@context.PoNumber</MudTd>
        <MudTd>@context.ProformaNo</MudTd>
        <MudTd>@context.ShippingMethod</MudTd>
        <MudTd DataLabel="Representative">@context.CustomerRepresentative</MudTd>
        <MudTd DataLabel="Actions" Style="text-align: right">
            <MudMenu Label="Actions" Variant="MudBlazor.Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                <MudMenuItem @onclick="@(async () => await EditOrderMaster(@context.OrderId))">Edit</MudMenuItem>
                <MudMenuItem @onclick="@( () => DeleteOrderMaster(@context.OrderId))">Delete</MudMenuItem>
            </MudMenu>
        </MudTd>
    </RowTemplate>
        
	<ChildRowContent>
        @if (ordDetail != null)
        {
            @if (showDetailStatus == 1)
            {
                @if (@context.OrderId == orderIDs)
                {
                    <MudTr>
                    <td>

                    </td>
                    <td colspan="7">
	                <MudCard Elevation="10"  Style="@($"color:{Colors.Teal.Darken3}; background:{Colors.Teal.Lighten5};")">
	                    <MudCardHeader>
	                    <CardHeaderContent>
	                    <MudText Typo="Typo.body1">Order Details of  Order NO - <strong> @context.OrderNo </strong> ,Total @ordDetail.Count  details for this Order</MudText>
	                    </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Primary" @onclick="@CloseOrderDetails" />
                        </CardHeaderActions>
	                    </MudCardHeader>
	                    <MudCardContent Class="pa-0">


                            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Style="@($"color:{Colors.Teal.Darken3}; background:{Colors.Teal.Lighten5};")">
                            <MudTabPanel Text="Order Item Master">
                                <MudTable Items="@ordDetail" Context="ordDetailContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
	                                <ColGroup>
		                            <col />
		                            <col />
		                            <col style="width:200px;" />
	                                </ColGroup>
	                                <HeaderContent>
		                            <MudTh>Order Id</MudTh>
		                            <MudTh>Mold</MudTh>
		                            <MudTh>Dimensions</MudTh>
                                    <MudTh>Total Quantity</MudTh>
                                    <MudTh>Code</MudTh>
                                    <MudTh Style="text-align:right">Actions</MudTh>
	                                </HeaderContent>
	                                <RowTemplate>
		                            <MudTd DataLabel="ORder Id">@ordDetailContext.OrderId</MudTd>
                                    <MudTd DataLabel="Mold Code">@ordDetailContext.MoldCode</MudTd>
                                    <MudTd DataLabel="Dimensions">@ordDetailContext.Dimensions</MudTd>
                                    <MudTd DataLabel="Tatal Quantity">@ordDetailContext.TotalQuantity</MudTd>
                                    <MudTd DataLabel="Code">@ordDetailContext.Code</MudTd>
                                    <MudTd DataLabel="Actions" Style="text-align: right">
                                        <MudMenu Label="Actions" Variant="MudBlazor.Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                                            <MudMenuItem @onclick="@(() => EditOrderDetails(@ordDetailContext.OrderDetailId))">Edit</MudMenuItem>
                                            <MudMenuItem @onclick="@(() => DeleteOrderDetails(@ordDetailContext.OrderDetailId))">Delete</MudMenuItem>
                                        </MudMenu>
                                    </MudTd>
	                                </RowTemplate>
	                                </MudTable>
                            </MudTabPanel>
                            <MudTabPanel Text="Order Item Labeling">
                                <MudTable Items="@ordDetail" Context="ordDetailContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
	                                <ColGroup>
		                            <col />
		                            <col />
		                            <col style="width:200px;" />
	                                </ColGroup>
	                                <HeaderContent>
		                            <MudTh>MoldCode</MudTh>
		                            <MudTh>AssortmentQuantity</MudTh>
		                            <MudTh>DecorationCode</MudTh>
                                    <MudTh>DecorationDescription</MudTh>
                                    <MudTh>Code</MudTh>
                                    <MudTh Style="text-align:right">Actions</MudTh>
	                                </HeaderContent>
	                                <RowTemplate>
                                    <MudTd DataLabel="Code">@ordDetailContext.MoldCode</MudTd>
		                            <MudTd DataLabel="ORder Id">@ordDetailContext.AssortmentCode</MudTd>
                                    <MudTd DataLabel="Mold Code">@ordDetailContext.AssortmentQuantity</MudTd>
                                    <MudTd DataLabel="Dimensions">@ordDetailContext.DecorationCode</MudTd>
                                    <MudTd DataLabel="Tatal Quantity">@ordDetailContext.DecorationDescription</MudTd>
                                        
                                    <MudTd DataLabel="Actions" Style="text-align: right">
                                        <MudMenu Label="Actions" Variant="MudBlazor.Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                                            <MudMenuItem @onclick="@(() => EditOrderDetails(@ordDetailContext.OrderDetailId))">Edit</MudMenuItem>
                                            <MudMenuItem @onclick="@(() => DeleteOrderDetails(@ordDetailContext.OrderDetailId))">Delete</MudMenuItem>
                                        </MudMenu>
                                    </MudTd>
	                                </RowTemplate>
	                                </MudTable>
                            </MudTabPanel>
                                
                            <MudTabPanel Text="Order Item Packing">
                                <MudTable Items="@ordDetail" Context="ordDetailContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
	                                <ColGroup>
		                            <col />
		                            <col />
		                            <col style="width:200px;" />
	                                </ColGroup>
	                                <HeaderContent>
		                            <MudTh>MoldCode</MudTh>
		                            <MudTh>ExternalPackHeight</MudTh>
		                            <MudTh>ExternalPackLenght</MudTh>
                                    <MudTh>ExternalPackWidth</MudTh>
                                    <MudTh>ExternalPackVolume</MudTh>
                                    <MudTh Style="text-align:right">Actions</MudTh>
	                                </HeaderContent>
	                                <RowTemplate>
		                            <MudTd DataLabel="ORder Id">@ordDetailContext.MoldCode</MudTd>
                                    <MudTd DataLabel="Mold Code">@ordDetailContext.ExternalPackHeight</MudTd>
                                    <MudTd DataLabel="Dimensions">@ordDetailContext.ExternalPackLenght</MudTd>
                                    <MudTd DataLabel="Tatal Quantity">@ordDetailContext.ExternalPackWidth</MudTd>
                                    <MudTd DataLabel="Code">@ordDetailContext.ExternalPackVolume</MudTd>
                                    <MudTd DataLabel="Actions" Style="text-align: right">
                                        <MudMenu Label="Actions" Variant="MudBlazor.Variant.Filled" DisableElevation="true" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary" Direction="Direction.Left" OffsetX="true">
                                            <MudMenuItem @onclick="@(() => EditOrderDetails(@ordDetailContext.OrderDetailId))">Edit</MudMenuItem>
                                            <MudMenuItem @onclick="@(() => DeleteOrderDetails(@ordDetailContext.OrderDetailId))">Delete</MudMenuItem>
                                        </MudMenu>
                                    </MudTd>
	                                </RowTemplate>
	                                </MudTable>
                            </MudTabPanel>
                        </MudTabs>
	                      
	                    </MudCardContent>
                         
                        <MudCardActions>
                            <MudButton Variant="MudBlazor.Variant.Text" Color="Color.Primary" @onclick="@(() => AddNewOrderDetails(@context.OrderId))">Add New Order Item</MudButton>
                        </MudCardActions>
	                </MudCard>
                    </td>
                    </MudTr>


                }
            }
        }
    </ChildRowContent>
    <FooterContent>
    </FooterContent>
    <PagerContent>
        <TablePager />
    </PagerContent>
</MudTable>











}



@code {
    List<Order> ordMaster;// = new List<Order>();

    List<OrderDetail> ordDetail;


    Order ordsM;// = new Order();
    OrderDetail ordsD;// = new OrderDetail();

    Boolean showAddMaster = false;
    Boolean showAddDetail = false;

    int showDetailStatus = 0;
    //int sortStatus = 0;
    int orderIDs = 0;
    string  Imagename = Icons.Material.Filled.Add;
    //string ImageSortname = "Media/Images/sortAsc.png";

    //private string OrderNo;


    

    protected void AddNewOrderMasters()
    {

        ordsM = new Order();
        //ordsM.OrderDate = DateTime.Now;
        showAddMaster = true;
        showAddDetail = false;
    }







    protected void SaveOrderMasters()
    {
        if (ordsM.OrderId == 0)
            Orders.Add(ordsM);

        ordsM = new Order();
        showAddMaster = false;
        ordMaster = Orders.ToList();
        CloseAddOrder();

    }
    protected void CloseOrderDetails()
    {
        showDetailStatus = 0;
        showAddMaster = false;
        showAddDetail = false;
        Imagename = Icons.Material.Filled.Add;
    }
    protected void CloseAddOrder()
    {
        showDetailStatus = 0;
        showAddMaster = false;
        showAddDetail = false;
        Imagename = Icons.Material.Filled.Add;
    }

    
    protected void getOrderDetails(int ordID)
    {


        showAddMaster = false;
        showAddDetail = false;
        if (orderIDs != ordID)
        {
            Imagename = Icons.Material.Filled.Add;
            showDetailStatus = 1;
        }
        else
        {
            if (showDetailStatus == 0)
            {
                Imagename = Icons.Material.Filled.Add;
                showDetailStatus = 1;
            }
            else
            {
                Imagename = Icons.Material.Filled.Add;
                showDetailStatus = 0;
            }

        }
        orderIDs = ordID;
        ordDetail = OrderDetails.Where(x => x.OrderId == ordID).ToList();

    }
    protected async Task EditOrderMaster(int OrderId)
    {
        await Task.Run(()=> {
            ordsM = Orders.Where(x=>x.OrderId == OrderId).First();
            if(ordsM != null)
                showAddMaster = true;
        });
        
    }
    protected void DeleteOrderMaster(int OrderId)
    {
        // ids = studentID.ToString();
        Order rem = Orders.Where(x => x.OrderId == OrderId).FirstOrDefault();
        if(rem != null)
            Orders.Remove(rem);


        // await Http.DeleteAsync("/api/StudentMasters/Delete/" + Convert.ToInt32(studentID));

        ordMaster = Orders.ToList();
        //Messages = "Order Master Deleted from Database !";
    }

    protected void  SaveOrderDetails()
    {
        if (ordsD.OrderDetailId == 0)
        {
            OrderDetails.Add(ordsD);
        }

        ordDetail = OrderDetails.Where(x=>x.OrderId == ordsD.OrderId).ToList();
        ordsD = new OrderDetail();
        showAddDetail = false;
        showAddMaster = false;
        //Messages = "Order Detail Saved to Databse !";
    }
    protected void AddNewOrderDetails(int orderMasterId)
    {
        ordsD = new OrderDetail();

        ordsD.OrderId = orderMasterId;
        //Messages = "";
        showAddDetail = true;
        showAddMaster = false;
    }
    protected void EditOrderDetails(int OrderDetailId)
    {
        ordsD = OrderDetails.Where(x=> x.OrderDetailId == OrderDetailId).FirstOrDefault();
        showAddDetail = true;
        showAddMaster = false;
    }
    protected void DeleteOrderDetails(int OrderDetailId)
    {
        var ordVale = ordsD.OrderId;
        // ids = studentID.ToString();
        OrderDetail rem = OrderDetails.Find(x => x.OrderDetailId == OrderDetailId);
        if(rem != null)
            OrderDetails.Remove(rem);


        ordDetail = OrderDetails.Where(x => x.OrderId == ordVale).ToList() ;
        Imagename = Icons.Material.Filled.Add;
        showDetailStatus = 0;
        //Messages = "Order Detail Deleted from Database !";
    }



    List<Order> Orders = new List<Order>()
    {
        new Order { OrderId = 1, OrderNo = "9565", ProformaNo = "CLT 9565", FirstShippingDate = DateTime.Now,  LastShippingDate = DateTime.Now, OrderFormFillingDate = DateTime.Now,
                    CustomerRepresentative = "Zekiye Ozkan", PoNumber = "0001", TotalNumberOfPallets = 12, LoadingType = "ON PALLETS / PALETLİ", PalletType = "Euro",
                    ShippingPlace = "LOCAL WAREHOUSE DELIVERY / DEPOYA TESLİM", VehicleType = "VESSEL / GEMİ", ShippingMethod = "EXW-Istanbul (Incoterms 2010)"
                    },
        new Order { OrderId = 2, OrderNo = "9606", ProformaNo = "MTR 9606", FirstShippingDate = DateTime.Now,  LastShippingDate = DateTime.Now, OrderFormFillingDate = DateTime.Now,
                    CustomerRepresentative = "TUĞÇE EREN", PoNumber = "0002", TotalNumberOfPallets = 6, LoadingType = "ON PALLETS / PALETLİ", PalletType = "Euro",
                    ShippingPlace = "LOCAL WAREHOUSE DELIVERY / DEPOYA TESLİM", VehicleType = "VESSEL / GEMİ", ShippingMethod = "EXW-Istanbul"
                    }

    };



    List<OrderDetail> OrderDetails = new List<OrderDetail>()
    {
        new OrderDetail { OrderDetailId = 1, OrderId = 1, ShippingDate = DateTime.Now, MoldCode = "11076", Dimensions = "Ø 33 x h: 2 cm", NetWeight = 1100,
                            DecorationCode = "1", DecorationDescription = "Sade", TotalQuantity = 918, MaxQuantity = 918,  SampleStatus = "RPT",
                            CustomerProductCode = "MTR9606", CustomerDescription = "HOUSE_PLATE LAWRENCE 33 CM ", Code = "6412989347269", InternalCode = "654654",
                            ExternalCode = "98987987", OnProductLabelInformation = "info 1", InternalLabelInformation = "label info 1", ExternalLabelInformation = "ext label info 1",
                            InternalPackQuantity = 5, InternalPackType = "PT 1", AssortmentCode = "Asorti 1", AssortmentQuantity = 5, ExternalPackQuantity = 5, ExternalPackType = "Type 1",
                            ExternalPackLenght = 0.35, ExternalPackWidth = 0.35, ExternalPackHeight = 0.085, ExternalPackVolume = 2,
                            TotalPackQuantity = 5, TotalVolume = 5 , TotalNetWeight = 50, TotalGrossWeight = 60
        },
        new OrderDetail { OrderDetailId = 2, OrderId = 1, ShippingDate = DateTime.Now, MoldCode = "11461", Dimensions = "Ø 32 x h: 2 cm", NetWeight = 1170,
                            DecorationCode = "1", DecorationDescription = "Sade", TotalQuantity = 518, MaxQuantity = 518,  SampleStatus = "RPT",
                            CustomerProductCode = "MTR9606", CustomerDescription = "PLATE FOOTED LAWRENCE 33 CM CLEAR HOUSE", Code = "6412989347276", InternalCode = "654654",
                            ExternalCode = "98987987", OnProductLabelInformation = "info 2", InternalLabelInformation = "label info 2", ExternalLabelInformation = "ext label 3nfo 1",
                            InternalPackQuantity = 8, InternalPackType = "PT 2", AssortmentCode = "Asorti 2", AssortmentQuantity = 5, ExternalPackQuantity = 6, ExternalPackType = "Type 1",
                            ExternalPackLenght = 0.35, ExternalPackWidth = 0.35, ExternalPackHeight = 0.085, ExternalPackVolume = 2,
                            TotalPackQuantity = 5, TotalVolume = 5 , TotalNetWeight = 50, TotalGrossWeight = 60
        },
        new OrderDetail { OrderDetailId = 3, OrderId = 2, ShippingDate = DateTime.Now, MoldCode = "11076", Dimensions = "Ø 33 x h: 2 cm", NetWeight = 1100,
                            DecorationCode = "1", DecorationDescription = "Sade", TotalQuantity = 918, MaxQuantity = 918,  SampleStatus = "RPT",
                            CustomerProductCode = "MTR9606", CustomerDescription = "HOUSE_PLATE LAWRENCE 33 CM ", Code = "6412989347269", InternalCode = "654654",
                            ExternalCode = "98987987", OnProductLabelInformation = "info 1", InternalLabelInformation = "label info 1", ExternalLabelInformation = "ext label info 1",
                            InternalPackQuantity = 5, InternalPackType = "PT 1", AssortmentCode = "Asorti 1", AssortmentQuantity = 5, ExternalPackQuantity = 5, ExternalPackType = "Type 1",
                            ExternalPackLenght = 0.35, ExternalPackWidth = 0.35, ExternalPackHeight = 0.085, ExternalPackVolume = 2,
                            TotalPackQuantity = 5, TotalVolume = 5 , TotalNetWeight = 50, TotalGrossWeight = 60
        },
        new OrderDetail { OrderDetailId = 4, OrderId = 2, ShippingDate = DateTime.Now, MoldCode = "11461", Dimensions = "Ø 32 x h: 2 cm", NetWeight = 1170,
                            DecorationCode = "1", DecorationDescription = "Sade", TotalQuantity = 518, MaxQuantity = 518,  SampleStatus = "RPT",
                            CustomerProductCode = "MTR9606", CustomerDescription = "PLATE FOOTED LAWRENCE 33 CM CLEAR HOUSE", Code = "6412989347276", InternalCode = "654654",
                            ExternalCode = "98987987", OnProductLabelInformation = "info 2", InternalLabelInformation = "label info 2", ExternalLabelInformation = "ext label 3nfo 1",
                            InternalPackQuantity = 8, InternalPackType = "PT 2", AssortmentCode = "Asorti 2", AssortmentQuantity = 5, ExternalPackQuantity = 6, ExternalPackType = "Type 1",
                            ExternalPackLenght = 0.35, ExternalPackWidth = 0.35, ExternalPackHeight = 0.085, ExternalPackVolume = 2,
                            TotalPackQuantity = 5, TotalVolume = 5 , TotalNetWeight = 50, TotalGrossWeight = 60
        }
    };
    
    public class Order
    {
        public int OrderId { get; set; }
        public string OrderNo { get; set; }
        public string ProformaNo { get; set; }
        public DateTime? FirstShippingDate { get; set; }
        public DateTime? LastShippingDate { get; set; }
        public DateTime? OrderFormFillingDate { get; set; }
        public string CustomerRepresentative { get; set; }
        public string PoNumber { get; set; }
        public int TotalNumberOfPallets { get; set; }
        public string LoadingType { get; set; }
        public string PalletType { get; set; }
        public string ShippingPlace { get; set; }
        public string VehicleType { get; set; }
        public string ShippingMethod { get; set; }

    }

    public class OrderDetail
    {
        public int OrderDetailId { get; set; }
        public int OrderId { get; set; }
        public DateTime ShippingDate { get; set; }
        public string MoldCode { get; set; }
        public string Dimensions { get; set; }
        public int NetWeight { get; set; }
        public string DecorationCode { get; set; }
        public string DecorationDescription { get; set; }
        public int TotalQuantity { get; set; }
        public int MaxQuantity { get; set; }
        public string SampleStatus { get; set; }



        //Label
        public string CustomerProductCode { get; set; }
        public string CustomerDescription { get; set; }
        public string Code { get; set; }
        public string InternalCode { get; set; }
        public string ExternalCode { get; set; }
        public string OnProductLabelInformation { get; set; }
        public string InternalLabelInformation { get; set; }
        public string ExternalLabelInformation { get; set; }
        
        
        //pack
        public int InternalPackQuantity { get; set; }
        public string InternalPackType { get; set; }
        public int AssortmentQuantity { get; set; }
        public string AssortmentCode { get; set; }
        public int ExternalPackQuantity { get; set; }
        public string ExternalPackType { get; set; }
        public double ExternalPackLenght { get; set; }
        public double ExternalPackWidth { get; set; }
        public double ExternalPackHeight { get; set; }
        public double ExternalPackVolume { get; set; }


        //packaging
        public int TotalPackQuantity { get; set; }
        public int TotalVolume { get; set; }
        public int TotalNetWeight { get; set; }
        public int TotalGrossWeight { get; set; }



    }




}