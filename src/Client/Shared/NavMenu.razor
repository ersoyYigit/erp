@inject Microsoft.Extensions.Localization.IStringLocalizer<NavMenu> _localizer
@using System.Security.Claims
@using ArdaManager.Shared.Constants.Application;
@using ArdaManager.Client.Infrastructure.Routes;

<UserCard />
<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home">@_localizer["Home"]</MudNavLink>
    @if (_canViewHangfire)
    {
        <MudNavLink Href="@(ApplicationConstants.SignalR.Server + "/jobs")" Target="_blank" Icon="@Icons.Material.Outlined.Work">
            @_localizer["Hangfire"]
        </MudNavLink>
        <MudNavLink Href="@swaggerUrl" Target="_blank" Icon="@Icons.Material.Outlined.Api">
            @_localizer["API Endpoints"]
        </MudNavLink>
    }
    
    <MudNavGroup Title="@_localizer["Personal"]" Icon="@Icons.Material.Filled.ManageAccounts" Expanded="false">
    
        @if (_canViewDashboards)
        {
            <MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Dashboard">
                @_localizer["Dashboard"]
            </MudNavLink>
        }
        <MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount">
            @_localizer["Account"]
        </MudNavLink>
        
    

    </MudNavGroup>
    @if ((_canViewDocuments || _canViewDocumentTypes))
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Document Management"]</MudListSubheader>
        @if (_canViewDocuments)
        {
            <MudNavLink Href="/document-store" Icon="@Icons.Material.Outlined.AttachFile">
                @_localizer["Document Store"]
            </MudNavLink>
        }
        @if (_canViewDocumentTypes)
        {
            <MudNavLink Href="/document-types" Icon="@Icons.Material.Outlined.FileCopy">
                @_localizer["Document Types"]
            </MudNavLink>
        }
    }

    
    @if (_canViewChat && false)
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Communication"]</MudListSubheader>
        <MudNavLink Href="/chat" Icon="@Icons.Material.Outlined.Chat">
            @_localizer["Chat"]
        </MudNavLink>
    }
    @if (_canViewProducts || _canViewPatterns || _canViewProductCategories)
    {

        <MudNavGroup Title="@_localizer["Catalog Management"]" Icon="@Icons.Material.Filled.Storage" Expanded="false">


        @if (_canViewProducts)
        {
            <MudNavLink Href="/catalog/products" Icon="@Icons.Material.Outlined.BlurOn" IconColor="Color.Info">
                @_localizer["Products"]
            </MudNavLink>
            <MudNavLink Href="/catalog/patterns" Icon="@Icons.Material.Outlined.Brush"IconColor="Color.Info">
                @_localizer["Patterns"]
            </MudNavLink>


            <MudNavGroup Title="@_localizer["Kalıp Yönetimi"]" Icon="@Icons.Material.Filled.Storage" Expanded="false">
                <MudNavLink Href="/catalog/templates" Icon="@Icons.Material.Outlined.BlurCircular" IconColor="Color.Info">
                    @_localizer["Templates"]
                </MudNavLink>
                <MudNavLink Href="/catalog/molds" Icon="@Icons.Material.Outlined.BuildCircle"IconColor="Color.Info">
                    @_localizer["Dökümler"]
                </MudNavLink>
                    <MudNavLink Href="/catalog/templateworkorders" Icon="@Icons.Material.Outlined.PrecisionManufacturing" IconColor="Color.Success">
                    @_localizer["Kalıp İş Emirleri"]
                </MudNavLink>
            </MudNavGroup>

        }


        </MudNavGroup>
        
    }
    @if (_canViewCompanies)
    {
        <MudNavGroup Title="@_localizer["Companies Management"]" Icon="@Icons.Material.Filled.AccountBalance" Expanded="false">
            @if (_canViewCompanies)
            {
                <MudNavLink Href="/corporation/companies" Icon="@Icons.Filled.Factory">
                    @_localizer["Companies"]
                </MudNavLink>

                <MudNavLink Href="/corporation/fairs" Icon="@Icons.Filled.Camera">
                    @_localizer["Fairs"]
                </MudNavLink>
            }
            @if (_canViewPersons)
            {
                <MudNavLink Href="/human/persons" Icon="@Icons.Material.Outlined.Person">
                    @_localizer["Persons"]
                </MudNavLink>
            }
        </MudNavGroup>
    }

    @if (_canViewReportsWarehouses)
    {
        <MudNavGroup Title="@_localizer["Raporlar"]" Icon="@Icons.Material.Filled.Cases" Expanded="false">
            @if (_canViewReportsWarehouses)
            {
                <MudNavLink Href="/reporting/GetAllWarehouseStocks" Icon="@Icons.Material.Filled.DocumentScanner">
                    @_localizer["Depo Stok Raporu"]
                </MudNavLink>
                
            }
        </MudNavGroup>
    }
    @if (_canViewWarehouses)
    {
        <MudNavGroup Title="@_localizer["Yerler"]" Icon="@Icons.Material.Filled.Place" Expanded="false">
            @if (_canViewWarehouses )
            {
                <MudNavLink Href="/inventory/warehouses" Icon="@Icons.Material.Outlined.Inventory">
                    @_localizer["Warehouses"]
                </MudNavLink>
                <MudNavLink Href="/inventory/racks" Icon="@Icons.Material.Outlined.ArtTrack">
                    @_localizer["Racks"]
                </MudNavLink>
                <MudNavLink Href="/inventory/productionlines" Icon="@Icons.Material.Outlined.LinearScale">
                    @_localizer["Üretim Bantları"]
                </MudNavLink>
                <MudNavLink Href="/catalog/warehouseEntryReceipts" Icon="@Icons.Material.Outlined.MoveToInbox">
                    @_localizer["Depo Giriş Fişi"]
                </MudNavLink>
                <MudNavLink Href="/catalog/warehouseExitReceipts" Icon="@Icons.Material.Outlined.Outbox">
                    @_localizer["Depo Çıkış Fişi"]
                </MudNavLink>
            }
        </MudNavGroup>
    }
    @if (_canViewPurchaseRequests)
    {
        <MudNavGroup Title="@_localizer["Satın Alma"]" Icon="@Icons.Material.Filled.ShoppingCart" Expanded="true">
            @if (_canViewPurchaseRequests)
            {
                <MudNavLink Href="/purchase/requests" Icon="@Icons.Material.Outlined.Receipt">
                    @_localizer["Talepler"]
                </MudNavLink>
            }
            @if (_canViewPurchaseRequests)
            {
                <MudNavLink Href="/purchase/offers" Icon="@Icons.Material.Outlined.LocalOffer">
                    @_localizer["Teklifler"]
                </MudNavLink>
            }
            @if (_canViewPurchaseRequests)
            {
                <MudNavLink Href="/purchase/orders" Icon="@Icons.Material.Outlined.ShoppingCartCheckout">
                    @_localizer["Siparişler"]
                </MudNavLink>
            }
        </MudNavGroup>
    }
    <MudNavGroup Title="@_localizer["Ayarlar"]" Icon="@Icons.Material.Filled.Settings" Expanded="false">
        @if (_canViewCategories)
        {
        <MudNavLink Href="/misc/categories" Icon="@Icons.Outlined.Category">
            @_localizer["Categories"]
        </MudNavLink>
        }
        @if (_canViewUsers || _canViewRoles)
        {
            @if (_canViewUsers)
            {
                <MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person">
                    @_localizer["Users"]
                </MudNavLink>
            }
            @if (_canViewRoles)
            {
                <MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.Person">@_localizer["Roller"]</MudNavLink>
            }
            @if (_canViewApprovalScenarios)
            {
                <MudNavLink Href="/Approval/scenarios" Icon="@Icons.Material.Outlined.CheckCircle">@_localizer["Onay Mekanizması"]</MudNavLink>
            }
        }
        @if (_canViewAuditTrails)
        {
                <MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security">
                @_localizer["Audit Trails"]
                </MudNavLink>
        }
        @if (_canViewCurrencies)
        {
            <MudNavLink Href="/misc/currencies" Icon="@Icons.Material.Outlined.CurrencyLira">
                Para Birimleri
            </MudNavLink>
            <MudNavLink Href="/misc/exchange-rates" Icon="@Icons.Material.Outlined.CurrencyExchange">
                Döviz Kurları
            </MudNavLink>
        }
        @if (_canViewTaxes)
        {
            <MudNavLink Href="/misc/taxes" Icon="@Icons.Material.Outlined.AccountBalance">
                Vergi Dilimleri
            </MudNavLink>
        }
    </MudNavGroup>
    <MudNavLink Href="/misc/qrscanner" Icon="@Icons.Material.Outlined.QrCodeScanner">
        @_localizer["Barkod Okuyucu"]
    </MudNavLink>


    @if (_canViewOrders )
    {
        <MudListSubheader Class="mt-2 mb-n2">@_localizer["Orders"]</MudListSubheader>
        @if (_canViewOrders)
        {
            <MudNavLink Href="/orders/addorder" Icon="@Icons.Material.Outlined.ViewList">
                @_localizer["Order Management"]
            </MudNavLink>
        }
    }


</MudNavMenu>

@code {
    //TODO: Publish
    //private string swaggerUrl = "https:////TODO: Publish:44398/";
    //private string swaggerUrl = "https://ardaapi.azurewebsites.net/";
    private string swaggerUrl = "https://api.ardaglassware.com:44398/";
    private ClaimsPrincipal _authenticationStateProviderUser;

    private bool _canViewHangfire;
    private bool _canViewDashboards;
    private bool _canViewDocuments;
    private bool _canViewDocumentTypes;
    private bool _canViewAuditTrails;
    private bool _canViewRoles;
    private bool _canViewUsers;
    private bool _canViewChat;
    private bool _canViewProducts;
    private bool _canViewPatterns;
    private bool _canViewProductCategories;
    private bool _canViewCategories;
    private bool _canViewCompanies;
    private bool _canViewWarehouses;
    private bool _canViewOrders;
    private bool _canViewPersons;
    private bool _canViewReportsWarehouses;
    private bool _canViewPurchaseRequests;
    private bool _canViewApprovalScenarios;
    private bool _canViewCurrencies;
    private bool _canViewTaxes;

    protected override async Task OnParametersSetAsync()
    {
        _authenticationStateProviderUser = await _stateProvider.GetAuthenticationStateProviderUserAsync();
        _canViewHangfire = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Hangfire.View)).Succeeded;
        _canViewDashboards = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Dashboards.View)).Succeeded;
        _canViewDocuments = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Documents.View)).Succeeded;
        _canViewDocumentTypes = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.DocumentTypes.View)).Succeeded;
        _canViewAuditTrails = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.AuditTrails.View)).Succeeded;
        _canViewRoles = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Roles.View)).Succeeded;
        _canViewUsers = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Users.View)).Succeeded;
        _canViewChat = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Communication.Chat)).Succeeded;
        _canViewProducts = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Products.View)).Succeeded;
        _canViewPatterns = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Patterns.View)).Succeeded;
        _canViewProductCategories = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Categories.View)).Succeeded;
        _canViewCategories = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Categories.View)).Succeeded;
        _canViewCompanies = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Companies.View)).Succeeded;
        _canViewWarehouses= (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Warehouses.View)).Succeeded;
        _canViewOrders = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Orders.View)).Succeeded;
        _canViewPersons = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Persons.View)).Succeeded;
        _canViewReportsWarehouses = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Reports.GetAllWarehousesStocks)).Succeeded;
        _canViewPurchaseRequests = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.PurchaseRequests.View)).Succeeded;
        _canViewApprovalScenarios = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Approval.Scenaios)).Succeeded;
        _canViewCurrencies = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Currencies.View)).Succeeded;
        _canViewTaxes = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Taxes.View)).Succeeded;
    }
}